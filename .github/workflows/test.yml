permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
name: test
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nasm
        if: runner.os == 'Windows'
        run: choco install nasm -y
      - name: Add tool to PATH
        run: echo 'C:\Program Files\NASM' >> $GITHUB_PATH
      - name: Verify nasm installation
        if: runner.os == 'Windows'
        run: nasm -v
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test
        run: cargo test --locked --all-features --all-targets
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4 # checking
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  alpine-test:
    runs-on: ubuntu-latest
    name: alpine / stable
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Docker container
        run: |
          docker pull alpine:latest
          docker run -d --name alpine-container -v ${{ github.workspace }}:/workspace -w /workspace alpine:latest tail -f /dev/null
      - name: Install dependencies
        run: |
          docker exec alpine-container sh -c "
          apk update &&
          apk add --no-cache musl-dev gcc rust cargo rustup &&
          rustup-init -y &&
          source /root/.cargo/env &&
          rustup toolchain install stable-x86_64-unknown-linux-musl &&
          rustup default stable-x86_64-unknown-linux-musl
          "

      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: docker exec alpine-container sh -c "source /root/.cargo/env && cargo generate-lockfile"
      - name: cargo test --locked
        run: docker exec alpine-container sh -c "source /root/.cargo/env && cargo test --locked --all-features --all-targets"
      - name: Clean up Docker container
        if: always()
        run: docker rm -f alpine-container
